generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  weights   Weight[] 
  routines  Routine[]
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt  
}

model Weight {
  id        Int      @id @default(autoincrement())
  value     Float    
  note      String?  
  date      DateTime @default(now())
  userId    Int      
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId]) 
}

model Exercise {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  bodyPart    String
  imageUrl    String?
  routines    RoutineExercise[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Routine {
  id          Int               @id @default(autoincrement())
  name        String
  description String?
  isDefault   Boolean           @default(false)
  imageUrl    String?
  userId      Int?
  user        User?             @relation(fields: [userId], references: [id])
  exercises   RoutineExercise[]
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model RoutineExercise {
  id          Int      @id @default(autoincrement())
  routine     Routine  @relation(fields: [routineId], references: [id])
  routineId   Int
  exercise    Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId  Int
  sets        Int      @default(3)
  reps        Int      @default(10)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([routineId, exerciseId])
}
